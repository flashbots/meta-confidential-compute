#!/bin/sh
### BEGIN INIT INFO
# Provides:          azure-complete-provisioning
# Required-Start:    $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Short-Description: Report VM is ready to Azure API
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=azure-complete-provisioning
DESC="Complete the provisioning of the Azure VM and report it is ready in the absence of the Azure VM Agent \
      Adapted from https://learn.microsoft.com/en-us/azure/virtual-machines/linux/no-agent#bash-script"
SYSTEM_API_FIFO=/var/volatile/system-api.fifo
LOGFILE=/var/log/azure-complete-provisioning.log

log() {
    if [ -p $SYSTEM_API_FIFO ]; then
        date_log() {
            echo -n ""
        }
    else
        date_log() {
            echo -n "$(date): "
        }
    fi
    echo "$(date_log)$1" | tee -a $SYSTEM_API_FIFO $LOGFILE
}

start() {
  touch $LOGFILE
  chmod 644 $LOGFILE

  attempts=1
  until [ "$attempts" -gt 5 ]
  do
      log "obtaining goal state - attempt $attempts"
      goalstate=$(curl --fail -v -X 'GET' -H "x-ms-agent-name: azure-vm-register" \
                                          -H "Content-Type: text/xml;charset=utf-8" \
                                          -H "x-ms-version: 2012-11-30" \
                                            "http://168.63.129.16/machine/?comp=goalstate")
      if [ $? -eq 0 ]
      then
        log "successfully retrieved goal state"
        retrieved_goal_state=true
        break
      fi
      sleep 5
      attempts=$((attempts+1))
  done

  if [ "$retrieved_goal_state" != "true" ]
  then
      log "failed to obtain goal state - cannot register this VM"
      exit 1
  fi

  container_id=$(echo "$goalstate" | grep ContainerId | sed 's/\s*<\/*ContainerId>//g' | sed 's/\r$//')
  instance_id=$(echo "$goalstate" | grep InstanceId | sed 's/\s*<\/*InstanceId>//g' | sed 's/\r$//')

  ready_doc=$(cat << EOF
<?xml version="1.0" encoding="utf-8"?>
<Health xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <GoalStateIncarnation>1</GoalStateIncarnation>
  <Container>
    <ContainerId>$container_id</ContainerId>
    <RoleInstanceList>
      <Role>
        <InstanceId>$instance_id</InstanceId>
        <Health>
          <State>Ready</State>
        </Health>
      </Role>
    </RoleInstanceList>
  </Container>
</Health>
EOF
)

  attempts=1
  until [ "$attempts" -gt 5 ]
  do
      log "registering with Azure - attempt $attempts"
      curl --fail -v -X 'POST' -H "x-ms-agent-name: azure-vm-register" \
                              -H "Content-Type: text/xml;charset=utf-8" \
                              -H "x-ms-version: 2012-11-30" \
                              -d "$ready_doc" \
                              "http://168.63.129.16/machine?comp=health"
      if [ $? -eq 0 ]
      then
        log "successfully register with Azure"
        break
      fi
      sleep 5 # sleep to prevent throttling from wire server
  done
}

case "$1" in
  start)
    start
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start}" >&2
    exit 1
    ;;
esac

exit 0
