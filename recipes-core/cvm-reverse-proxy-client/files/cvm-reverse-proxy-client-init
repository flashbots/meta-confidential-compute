#!/bin/sh
### BEGIN INIT INFO
# Provides:          cvm-reverse-proxy-client
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start CVM Reverse Proxy Client at boot time
# Description:       Enable CVM Reverse Proxy Client service.
### END INIT INFO

. /etc/init-config.conf || true

DAEMON=/usr/bin/proxy-client
NAME=cvm-reverse-proxy-client
DESC="CVM Reverse Proxy Client"

# Note: server attestations should be verified against onchain KMS governance expected measurements
DAEMON_ARGS="--listen-addr=localhost:7937 --target-addr=https://ns31695324.ip-141-94-163.eu:10079 --client-attestation-type dummy --dev-dummy-dcap http://ns31695324.ip-141-94-163.eu:10080 --server-measurements /etc/measurements.json"
PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/$NAME.log
SYSTEM_API_FIFO=/var/volatile/system-api.fifo

log() {
    if [ -p $SYSTEM_API_FIFO ]; then
        date_log() {
            echo -n ""
        }
    else
        date_log() {
            echo -n "$(date): "
        }
    fi
    echo "$(date_log)$1" >&2 | tee -a $SYSTEM_API_FIFO
}

start() {
    # TODO: should be taken from the chain!
    echo  '[ { "measurement_id": "dcap-tdx-dummy", "attestation_type": "dcap-tdx", "measurements": { "1": "00e1dad5455e5fa87974edb69e13296dd1ba9fa86356d70b68be15dd5d36767643904de1893c1b4d47fc8d3a90675391", "2": "a7157e7c5f932e9babac9209d4527ec9ed837b8e335a931517677fa746db51ee56062e3324e266e3f39ec26a516f4f71", "3": "e63560e50830e22fbc9b06cdce8afe784bf111e4251256cf104050f1347cd4ad9f30da408475066575145da0b098a124", "4": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" } } ]' > /etc/measurements.json

    log "Starting $NAME"
    start-stop-daemon -S --make-pidfile -p $PIDFILE -m -b --exec /bin/sh -- -c "exec $DAEMON $DAEMON_ARGS >> $LOGFILE 2>&1"
    log "Started $NAME"
}

stop() {
    log "Stopping $NAME"
    start-stop-daemon --stop --quiet --pidfile $PIDFILE
    rm -f $PIDFILE
    log "Stopped $NAME"
}

restart() {
    log "Restarting $NAME"
    stop
    sleep 1
    start
    log "Restarted $NAME"
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart|force-reload)
        restart
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
